{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luiz1\\\\OneDrive\\\\Documentos\\\\GitHub\\\\netflix-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './api/Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeaturedMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeacturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o filme em destaque\n\n      let originals = list.filter(i => i.slug === 'originals'); //filtra a lista com os filmes que possuem o slug = originals\n\n      console.log(originals); //Gerar numero aleatorio da lista\n\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.leght - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      console.log(chosen);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeatureMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MovieRow, {\n          title: item.title,\n          items: item.items\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}, \"e0s3GJs/iLy1p04qiday3P4fGIk=\");","map":{"version":3,"sources":["C:/Users/luiz1/OneDrive/Documentos/GitHub/netflix-clone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeatureMovie","movieList","setMovieList","featuredData","setFeacturedData","loadAll","list","getHomeList","originals","filter","i","slug","console","log","randomChosen","Math","floor","random","items","results","leght","chosen","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;;AAEA,kBAAe,MAAM;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,gBAAf,IAAmCP,QAAQ,CAAC,IAAD,CAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMR,IAAI,CAACS,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAW,WAA1B,CAAhB,CAN0B,CAM8B;;AAExDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAR0B,CAS1B;;AACA,UAAIM,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,SAAS,CAAC,CAAD,CAAT,CAAaU,KAAb,CAAmBC,OAAnB,CAA2BC,KAA3B,GAAmC,CAApD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGb,SAAS,CAAC,CAAD,CAAT,CAAaU,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACD,KAdD;;AAeAhB,IAAAA,OAAO;AACR,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAGEF,YAAY,iBACZ,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACqB,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb;AAAA,+BACE,QAAC,QAAD;AAAoB,UAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,UAAA,KAAK,EAAEF,IAAI,CAACL;AAAnD,WAAeM,GAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzCD","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Tmdb from './api/Tmdb'\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeaturedMovie'\nimport './App.css'\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeacturedData] = useState(null);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o filme em destaque\n      let originals = list.filter(i=>i.slug === 'originals'); //filtra a lista com os filmes que possuem o slug = originals\n\n      console.log(originals)\n      //Gerar numero aleatorio da lista\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.leght - 1));\n      let chosen = originals[0].items.results[randomChosen];\n\n      console.log(chosen)\n    } \n    loadAll();\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n    {\n      featuredData && \n      <FeatureMovie item={featuredData}/>\n    }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <div>\n            <MovieRow key={key} title={item.title} items={item.items}/>\n          </div>\n        ))}\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}